{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LoadingComponent {\n  constructor() {}\n  ngOnInit() {}\n  static ɵfac = function LoadingComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LoadingComponent)();\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadingComponent,\n    selectors: [[\"app-loading\"]],\n    decls: 5,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"col-12\", \"text-center\"], [1, \"fa\", \"fa-spinner\", \"fa-pulse\", \"fa-3x\", \"fa-fw\"], [1, \"sr-only\"]],\n    template: function LoadingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"i\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Loading...\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["LoadingComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","LoadingComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd"],"sources":["/frontend/src/app/loading/loading.component.ts","/frontend/src/app/loading/loading.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: []\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12 text-center\">\n        <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\n        <span class=\"sr-only\">Loading...</span>    \n    </div>\n  </div>"],"mappings":";AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAA,GAAgB;EAEhBC,QAAQA,CAAA,GACR;;qCALWF,gBAAgB;EAAA;;UAAhBA,gBAAgB;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCNzBE,EADJ,CAAAC,cAAA,aAAiB,aACmB;QAC5BD,EAAA,CAAAE,SAAA,WAAkD;QAClDF,EAAA,CAAAC,cAAA,cAAsB;QAAAD,EAAA,CAAAG,MAAA,iBAAU;QAEtCH,EAFsC,CAAAI,YAAA,EAAO,EACrC,EACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}