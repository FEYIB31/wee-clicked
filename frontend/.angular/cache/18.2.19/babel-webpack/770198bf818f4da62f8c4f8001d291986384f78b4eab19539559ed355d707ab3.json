{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Blog } from '../models/blog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class BlogService {\n  apiService;\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  getBlogs() {\n    return this.apiService.get(environment.api.entries).pipe(map(json => {\n      return json.map(post => new Blog(post));\n    }));\n  }\n  getBlog(id) {\n    return this.apiService.get(environment.api.entries + '/' + id).pipe(map(json => {\n      return new Blog(json);\n    }));\n  }\n  addBlog(blog) {\n    return this.apiService.post(environment.api.entries, blog);\n  }\n  addDummy(num) {\n    return this.apiService.post(environment.api.entries + '/' + 'dummy', num);\n  }\n  editBlog(id, blog) {\n    return this.apiService.put(environment.api.entries + '/' + id, blog);\n  }\n  deleteBlog(id) {\n    return this.apiService.delete(environment.api.entries + '/' + id);\n  }\n  static ɵfac = function BlogService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BlogService)(i0.ɵɵinject(i1.ApiService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlogService,\n    factory: BlogService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","environment","Blog","BlogService","apiService","constructor","getBlogs","get","api","entries","pipe","json","post","getBlog","id","addBlog","blog","addDummy","num","editBlog","put","deleteBlog","delete","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["/frontend/src/app/service/blog.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { ApiService } from './api.service';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport {Blog} from '../models/blog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  constructor(private apiService: ApiService) {}\n\n  public getBlogs(): Observable<Blog[]> {\n    return this.apiService.get(environment.api.entries).pipe(\n      map(json => {\n        return json.map(post => new Blog(post));\n      })\n    );\n  }\n\n  public getBlog(id: string): Observable<Blog> {\n    return this.apiService.get(environment.api.entries + '/' + id).pipe(\n      map(json => {\n        return new Blog(json);\n      })\n    );\n  }\n\n  public addBlog(blog: Blog): Observable<any> {\n    return this.apiService.post(environment.api.entries, blog);\n  }\n\n  public addDummy(num:number): Observable<any> {\n    return this.apiService.post(environment.api.entries + '/' + 'dummy', num);\n  }\n\n  public editBlog(id: number, blog: Blog): Observable<any> {\n    return this.apiService.put(environment.api.entries + '/' + id, blog);\n  }\n\n  public deleteBlog(id) {\n    return this.apiService.delete(environment.api.entries + '/' + id);\n  }\n}\n"],"mappings":"AACA,SAASA,GAAG,QAAoB,gBAAgB;AAEhD,SAASC,WAAW,QAAQ,gCAAgC;AAE5D,SAAQC,IAAI,QAAO,gBAAgB;;;AAKnC,OAAM,MAAOC,WAAW;EACFC,UAAA;EAApBC,YAAoBD,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAEtCE,QAAQA,CAAA;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAACN,WAAW,CAACO,GAAG,CAACC,OAAO,CAAC,CAACC,IAAI,CACtDV,GAAG,CAACW,IAAI,IAAG;MACT,OAAOA,IAAI,CAACX,GAAG,CAACY,IAAI,IAAI,IAAIV,IAAI,CAACU,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CACH;EACH;EAEOC,OAAOA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACV,UAAU,CAACG,GAAG,CAACN,WAAW,CAACO,GAAG,CAACC,OAAO,GAAG,GAAG,GAAGK,EAAE,CAAC,CAACJ,IAAI,CACjEV,GAAG,CAACW,IAAI,IAAG;MACT,OAAO,IAAIT,IAAI,CAACS,IAAI,CAAC;IACvB,CAAC,CAAC,CACH;EACH;EAEOI,OAAOA,CAACC,IAAU;IACvB,OAAO,IAAI,CAACZ,UAAU,CAACQ,IAAI,CAACX,WAAW,CAACO,GAAG,CAACC,OAAO,EAAEO,IAAI,CAAC;EAC5D;EAEOC,QAAQA,CAACC,GAAU;IACxB,OAAO,IAAI,CAACd,UAAU,CAACQ,IAAI,CAACX,WAAW,CAACO,GAAG,CAACC,OAAO,GAAG,GAAG,GAAG,OAAO,EAAES,GAAG,CAAC;EAC3E;EAEOC,QAAQA,CAACL,EAAU,EAAEE,IAAU;IACpC,OAAO,IAAI,CAACZ,UAAU,CAACgB,GAAG,CAACnB,WAAW,CAACO,GAAG,CAACC,OAAO,GAAG,GAAG,GAAGK,EAAE,EAAEE,IAAI,CAAC;EACtE;EAEOK,UAAUA,CAACP,EAAE;IAClB,OAAO,IAAI,CAACV,UAAU,CAACkB,MAAM,CAACrB,WAAW,CAACO,GAAG,CAACC,OAAO,GAAG,GAAG,GAAGK,EAAE,CAAC;EACnE;;qCAjCWX,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}