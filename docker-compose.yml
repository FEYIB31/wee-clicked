# Run docker-compose build
# Run docker-compose up
# Comments represent alternate or optional configurations
version: '2'

services:
  backend:
    container_name: backend_container
    restart: always
    build: ./backend
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
    - ./backend:/backend
    env_file:
     - .env_docker
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8000/healthy}"
      interval: "60s"
      timeout: "3s"
      retries: 3
    command: pipenv run flask run --host=0.0.0.0

  frontend:
    container_name: frontend_container
    build: ./frontend
    ports:
      - "4200:4200"
      - '9876:9876'
    volumes:
      - ./frontend:/frontend
    command: ng serve --host 0.0.0.0 --disable-host-check --port 4200 --poll=2000

  postgres:
   container_name: postgresql_container
   restart: always
   build: ./postgresql
   volumes:
     - /var/lib/postgresql
   ports:
     - "5432:5432"
#   environment:
#     POSTGRES_DATABASE: 'blogs'
#     POSTGRES_USER: 'user'
#     POSTGRES_PASSWORD: 'password'
   env_file:
     - .env_docker

  nginx:
    container_name: nginx_container
    restart: always
#    image: nginx:1.13.7
    build:
      context: .
      dockerfile: nginx/Dockerfile
#    volumes:
#      - ./frontend/dist:/usr/share/nginx/html
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
      - "443:443"
    depends_on:
      - backend

  redis:
    container_name: redis_container
    restart: always
    image: redis
#    volumes:
#      - [path to custom redis.conf file]:/usr/local/etc/redis/redis.conf
    ports:
    - 6379:6379

  worker:
    command: celery worker -B -l info -A snakeeyes.blueprints.contact.tasks
    depends_on:
      - "redis"
    env_file:
      - ".env"
    restart: always
    volumes:
      - "${DOCKER_WEB_VOLUME:-./public:/app/public}"

